<configuration>

	<database>
		<driver>#[jem.db.driver]</driver>
		<url>#[jem.db.url]</url>
		<user>#[jem.db.user]</user>
		<password>#[jem.db.password]</password>
		<!--properties>
			<property name="b" value="valore B" />
			<property name="a" value="valore A" />
			<property name="e" value="valore E" />
			<property name="d" value="valore D" />
			<property name="c" value="valore C" />
		</properties-->
	</database>
	
	<datasetsRules>${jem.persistence}/#[jem.environment.name]/config/datasetsRules.xml</datasetsRules>

	<statistics-manager/>

	<!-- node className="org.pepstock.jem.grs.GrsNode">
		<properties/>
	</node-->

	<factories>
		<factory className="org.pepstock.jem.ant.AntFactory">
			<!-- if needed you can set property here and call them on JCL as ${property.name} -->
			<properties>
				<!-- <property name="property.name" value="property.value"/> -->
				<!--  property name="jem.xslt.project.validator" value="${JEM_NODE}/policy/AntValidator.xslt" /-->
			</properties>
		</factory>
		<factory className="org.pepstock.jem.springbatch.SpringBatchFactory">
			<!-- if needed you can set property here and call them on JCL as ${property.name} -->
			<properties>
				<!-- <property name="property.name" value="property.value"/> 
				<property name="jem.jdbc.url" value="jdbc:mysql://hostname/springbatch" /> 
				<property name="jem.jdbc.driver" value="com.mysql.jdbc.Driver" /> 
				<property name="jem.jdbc.user" value="userid" /> 
				<property name="jem.jdbc.password" value="blahblah" />
				<property name="jem.jdbc.type" value="mysql" /-->
			</properties>
		</factory>
		<factory className="org.pepstock.jem.ant.BashFactory">
			<!-- if needed you can set property here and call them on JCL as ${property.name} -->
			<properties>
				<!-- <property name="property.name" value="property.value"/> -->
				<!--  property name="jem.xslt.project.validator" value="${JEM_NODE}/policy/AntValidator.xslt" /-->
			</properties>
		</factory>
		<factory className="org.pepstock.jem.ant.WindowsCmdFactory">
			<!-- if needed you can set property here and call them on JCL as ${property.name} -->
			<properties>
				<!-- <property name="property.name" value="property.value"/> -->
				<!--  property name="jem.xslt.project.validator" value="${JEM_NODE}/policy/AntValidator.xslt" /-->
			</properties>
		</factory>
		<factory className="org.pepstock.jem.ant.PowerShellFactory">
			<!-- if needed you can set property here and call them on JCL as ${property.name} -->
			<properties>
				<!-- <property name="property.name" value="property.value"/> -->
				<!--  property name="jem.xslt.project.validator" value="${JEM_NODE}/policy/AntValidator.xslt" /-->
			</properties>
		</factory>

		<!--factory className="org.pepstock.jem.ant.GenericScriptFactory">
			<properties>
				<property name="jem.generic.jcl.type" value=""/>
				<property name="jem.generic.jcl.type.description" value=""/>
				<property name="jem.generic.jcl.comment" value="#"/>
				<property name="jem.generic.jcl.tag" value=""/>
				<property name="jem.generic.jcl.mode" value=""/>
				<property name="jem.generic.command" value=""/>
			</properties>
		</factory-->

		<!-- factory className="org.pepstock.jem.jbpm.JBpmFactory">
			<properties>
			</properties>
			<classpath>
				<pathElement>${jem.library}/jem-jbpm/jem-jbpm.jar</pathElement>
				<pathElement>${jem.library}/jem-jbpm/jbpm/**</pathElement>
			</classpath>
		</factory-->
	</factories>

	<listeners>
		<listener
			className="org.pepstock.jem.node.events.DefaultJobChangeStatusListener">
			<properties>
				<property name="key" value="value" />
			</properties>
		</listener>
		
		<listener
			className="org.pepstock.jem.node.https.HttpJobListener">
		</listener>
		
		<!-- listener className="org.pepstock.jem.listeners.JobOutputArchiveListener">
			<properties>
				<property name="license" value="Pepstock_JEM_AntUtil.license" />
				<property name="class" value="org.pepstock.jem.node.archive.DefaultJobOutputArchive" />
			</properties>
		</listener-->
	</listeners>

	<resource-definitions>
		<resource-definition className="org.pepstock.jem.node.resources.impl.jdbc.JdbcResourceDefinition"/>
		<resource-definition className="org.pepstock.jem.node.resources.impl.ftp.FtpResourceDefinition"/>
		<resource-definition className="org.pepstock.jem.node.resources.impl.jem.JemResourceDefinition"/>
		<resource-definition className="org.pepstock.jem.node.resources.impl.jms.JmsResourceDefinition"/>
		<resource-definition className="org.pepstock.jem.node.resources.impl.jppf.JppfResourceDefinition"/>
		<resource-definition className="org.pepstock.jem.node.resources.impl.http.HttpResourceDefinition"/>
		<resource-definition className="org.pepstock.jem.node.resources.impl.rmi.RmiResourceDefinition"/>
		<resource-definition className="org.pepstock.jem.node.resources.impl.jndi.JndiResourceDefinition"/>
		<resource-definition className="org.pepstock.jem.node.resources.impl.rest.RestResourceDefinition"/>
		<!-- sample of external -->
		<!--resources-definition>
			<resource-definition className="org.pepstock.jem.addons.resources.rmi.RmiResourceDefinition"/>
			<resource-definition className="org.pepstock.jem.addons.resources.jndi.JndiResourceDefinition"/>
			<resource-definition className="org.pepstock.jem.addons.resources.rest.RestResourceDefinition"/>
			<classpath>
				<pathElement>${jem.library}/jem-addons/jem-addons.jar</pathElement>
			</classpath>
		</resources-definition-->
		<!--properties>
			<property name="key" value="value" />
		</properties-->		
	</resource-definitions>


</configuration>