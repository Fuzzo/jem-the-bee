<?xml version="1.0"?>
<project name="TEST_COMMON_CREATE_JEM_JDBC_DATA_SOURCE" default="createJDBCReource" basedir=".">
	<description>
		This example will     	
    		1) target:createDasetJDBC 
    		   Launch a step java that will retrieve the configuration of the 
    		   JEM DB and create a data set containing the definition
		       of a JEM resource of type JDBC. Note that this will be possibile only
		       because the user that launch this task will be configure as an admin
		       user that hence can access the persisence path,
    	
    		2) target:createJDBCReource
    		   launch a job that will use the dataset create in step one to import
    		   the datasource inside the JEM application server    	
    </description>

	<property name="jem.job.name" value="TEST_COMMON_CREATE_JEM_JDBC_DATA_SOURCE" />
	<property name="jem.job.lockingScope" value="task" />
	<!-- 
	<property name="jem.job.domain" value="domain"/>
	<property name="jem.job.environment" value="environment"/>
	<property name="jem.job.affinity" value="affinity"/>
	-->

	<taskdef name="step-java" classname="org.pepstock.jem.ant.tasks.StepJava" />
	<taskdef name="resources" classname="org.pepstock.jem.ant.CommonResourcesTask" />
	<taskdef name="wrapper" classname="org.pepstock.jem.ant.tasks.WrapperTask" />

	<!-- create jdbc resource read from dataset -->
	<target name="createJDBCReource" depends="createDasetJDBC">
		<resources license="Pepstock_JEM_AntUtil.license">
			<dataDescription name="JUNIT_JDBC_JEM" disposition="SHR">
				<dataSet name="${jem.data}/test_common/JEM_JDBC_RESOURCE" />
			</dataDescription>
			<dataDescription name="COMMAND" disposition="SHR">
				<dataSet>
					SET SOURCE JUNIT_JDBC_JEM NOENCRYPTION;
				</dataSet>
			</dataDescription>
		</resources>
	</target>
	<!-- 
		Access to jem config, read database parameter and create dataset 
		containing the relative jdbc resource
	-->
	<target name="createDasetJDBC">
		<step-java classname="org.pepstock.jem.junit.test.antutils.java.CreateJemJdbcResource">
			<arg value="-h" />
			<classpath>
				<pathelement path="${JEM_HOME}/lib/jem.jar" />
				<pathelement path="${JEM_HOME}/lib/jem-junit.jar" />
				<fileset dir="${JEM_HOME}/lib/commons-io/" includes="*.jar"/>
				<fileset dir="${JEM_HOME}/lib/xstream/" includes="*.jar"/>
			</classpath>
		</step-java>
	</target>
</project>