package org.pepstock.jem.junit.test.jms.java;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.apache.commons.lang.SystemUtils;
import org.pepstock.jem.node.tasks.platform.CurrentPlatform;
import org.pepstock.jem.node.tasks.platform.Platform;

/**
 * 
 * @author Simone "Busy" Businaro
 * 
 *         Start a java process that is a jms server that will be used to test
 *         jms functionality
 * 
 */
public class JmsServer {

	public static String JUNIT_JMS_QUEUE_NAME = "queue/JUNIT_JMS_QUEUE_NAME";

	public static String JUNIT_JMS_CONNECTIONFACTORY_NAME = "factory/ConnectionFactory";

	public static String PROVIDER_URL = "tcp://localhost:10002";

	public static String TEST_MESSAGE = "Jem Queue Test Message";

	/**
	 * Run a Thread that will start a new process
	 * 
	 * @throws Exception
	 */
	public void start() {
		JMSThread jmsThread = new JMSThread();
		jmsThread.setDaemon(false);
		jmsThread.start();
	}

	/**
	 * Close the jms server reading the process id from file generated by ffmq
	 * server
	 * 
	 * @throws Exception
	 */
	public void stop() throws Exception {
		File pidFile = new File("./jms/bin/ffmq-server.pid");
		long pid = Long.parseLong(FileUtils.readFileToString(pidFile).trim());
		Platform platform = CurrentPlatform.getInstance();
		platform.kill(pid, null, true, false);
	}

	/**
	 * 
	 * @param args
	 * @throws Exception
	 */
	public static void main(String[] args) throws Exception {
		JmsServer jmsServer = new JmsServer();
		jmsServer.start();
	}


	class JMSThread extends Thread {

		public JMSThread() {
		}

		/*
		 * (non-Javadoc)
		 * 
		 * @see java.lang.Thread#run()
		 */
		@Override
		public void run() {
			ProcessBuilder builder = new ProcessBuilder();
			File dir = new File("./jms/bin/");
			File logsDir = new File("./jms/logs");
			File dataDir = new File("./jms/data");
			File destinationDir = new File("./jms/destinations");
			try {
				FileUtils.deleteDirectory(logsDir);
				logsDir.mkdir();
				FileUtils.deleteDirectory(dataDir);
				dataDir.mkdir();
				FileUtils.deleteDirectory(destinationDir);
				destinationDir.mkdir();
			} catch (IOException e1) {
				e1.printStackTrace();
			}

			builder.directory(dir);

			if (SystemUtils.IS_OS_WINDOWS) {
				builder.command("cmd.exe", "/C", "ffmq-server.bat");
			} else {
				builder.command("bash", "-c", "./ffmq-server.sh");
			}
			try {
				Process process = builder.start();
				if (process.waitFor() != 0) {
					throw new IOException("Command not started");
				} else {
					System.out
							.println("JMS server started see log jms/log/ffmq-server.log");
				}
			} catch (IOException e) {
				e.printStackTrace();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}
